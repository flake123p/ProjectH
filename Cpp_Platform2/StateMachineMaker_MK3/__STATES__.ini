;
; for SMM MK3
;
[STATE_EVENT_TABLE]
<SE_TABLE>
	S\E					POWER_ON		NFC			PAIRING		
	-----------------------------------------------------------------
	S,OFF				D,iSTANDBY		D,iSTANDBY	R,iSTANDBY
	I,iSTANDBY
	S,STANDBY			N				N			D,PAIRING
	S,PAIRING			N				N			N
	
	S,Exit				N				R,Init
</SE_TABLE>

;	Mapping next state to following external enum
<INTER_STATE>
	iSTANDBY {
		STANDBY		XXX_OK
		Exit		XXX_FAIL
	}
</INTER_STATE>

;	[state]			[entry_func] 	[leave_func]  (with old/new states!)
<STATE_FUNC>
	OFF				DEFAULT			OFF_external_leave_func
	iSTANDBY		DEFAULT
	STANDBY			DEFAULT			DEFAULT
	PAIRING			DEFAULT			DEFAULT
	Exit			DEFAULT			DEFAULT
</STATE_FUNC>

<GLOBAL_EVENT>
	GetState	DEFAULT
	GetBuf		FuncGetBuf
</GLOBAL_EVENT>

<EVENT_PARA>
	u8 *abcccc;
	u8 defcccc;
	u8 handle;
</EVENT_PARA>

;	[event]			[next_state] 	[opt./input_file]	[opt./output_file]	[opt./compare_file]
<TEST_CASE>
</TEST_CASE>

[ATTR]
Out_File_Header_C	= "App_StateMachine.h"
Out_File_Source_C	= "App_StateMachine.c"	// [XXX].cpp, [XXX]_Function.cpp, [XXX]_TestCase.cpp
State_Name			= "App_State"			// 1:SFS_TEST_t, 2:gSFS_Test, 3:SFS_Test_StateMachine()
State_Prefix		= "APP_"				// For state enum
State_Prefix_Sx		= 0						// For state enum, S0_  S1_  S2_  ...
Event_Name			= "APP"					// For event typedef
Event_Prefix		= "APP_EVT_"			// For event enum
Event_Prefix_Ex		= 0						// For event enum

Ext_File_Name		= "APP_ExtFunc"

AVOID_REDEFINE_TYPE	= BEFORE				// BEFORE or AFTER

[INCLUDE]
<INCLUDE_FRONT>
#include "Everything_App.h"
</INCLUDE_FRONT>
<INCLUDE_BACK>
#include "APP_ExtFunc.h"
</INCLUDE_BACK>

[ASSERT]
<ASSERT>
BASIC_ASSERT(0);
</ASSERT>